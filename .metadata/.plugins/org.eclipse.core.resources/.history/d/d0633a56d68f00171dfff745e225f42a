package Queue;

//import Stacks.DynamicStack;

public class Client {

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub

		Queue r = new Queue(5);
//		Queue r = new DynamicQueue(5);
		
		r.enqueue(10);
		r.enqueue(20);
		r.enqueue(30);
		r.enqueue(40);
//		r.enqueue(50);
//		System.out.println(r.rear()+ " rear");
		System.out.println(r.size() + " size");
		System.out.println(r.data.length + " data.length");
//		r.enqueue(50);
//		r.enqueue(60);
//		r.enqueue(70);
		r.display();
		r.dequeue();
		r.dequeue();
		r.dequeue();
		r.enqueue(60);
		r.enqueue(70);
//		System.out.println(r.rear()+ " rear");
		r.display();
		
//		System.out.println(r.front());
//		r.dequeue();
//		r.display();
//		r.dequeue();
//		r.dequeue();
//		r.display();
//		
//		r.enqueue(60);
//		r.display();
//		System.out.println(r.isempty());
//		r.isempty();
//		r.dequeue();
//		r.dequeue();
//		r.dequeue();
//		r.dequeue();
//		r.dequeue();
//		r.display();
//		System.out.println(r.isempty());
		
//		displayReverse(r , 0);
//		r.display();
		
//		reverse(r);
//		r.display();
//	
	}
	
	public static void displayReverse(Queue r , int count) throws Exception {
		
		if(count == r.size) {
			return ; 
		}
		
		int item = r.dequeue(); 
		r.enqueue(item);
		
		displayReverse(r , count+1);
		
		System.out.println(item + "    ");
		
	}
	
	public static void reverse(Queue r)throws Exception {
		if(r.isempty()) {
			return ; 
		}
		
		int item = r.dequeue(); 
		reverse(r);
		r.enqueue(item);
		
		
	}

}
