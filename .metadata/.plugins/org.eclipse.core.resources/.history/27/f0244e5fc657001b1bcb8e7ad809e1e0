package kdInterview;

public class ques2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		
//		int arr[] = {1,1,0,0};
//		System.out.println(function(arr));	
		
		int arr1[] = {2,3,1,0}; // 9
		System.out.println(fun2(arr1));
	}
	
	static int mod = 1000000007;
	
	private static int function(int[] arr) {
		int n = arr.length;
		int count =0;
		int unplacedZeros = 0;
		
		for(int i=n-1;i>=0;i--) {
			if((arr[i] & 1) == 0) {
				unplacedZeros = (unplacedZeros + 1)%mod;
			} else {
				count = (count + unplacedZeros)%mod;
			}
		}
		
		return count;
		
	}
	
	public static int[] fun2(int[] nums) {
        int n = nums.length;
        int[] res = new int[n];
        int[] prefixSum = new int[n + 1];
        for (int i = 0; i < n; ++i) {
            prefixSum[i + 1] = prefixSum[i] + nums[i];
        }
        for (int i = 0; i < n; ++i) {
            res[i] = i * nums[i] - prefixSum[i] + (prefixSum[n] -  prefixSum[i] - (n - i) * nums[i]);
        }
        return res;
    }
	
	
	
	
	
//	count = 0
//		    num_unplaced_zeros = 0
//		       
//		    for index in range(len(arr)-1,-1,-1): 
//		        if arr[index] == 0: 
//		            num_unplaced_zeros += 1
//		        else: 
//		            count += num_unplaced_zeros 
//		    return count 
//		   
//		arr = [0, 0, 1, 0, 1, 1, 0, 1, 1]  
//		print(minswaps(arr)) 

}
