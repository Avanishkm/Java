package GenericTreeExtraClass;

import java.util.ArrayList;
import java.util.Scanner;



//import July3.GenericTree.Node;

public class GenericTree {

	private class Node {
		int data;
		ArrayList<Node> children = new ArrayList<>();
	}

	private Node root;
	private int size;

	public GenericTree() {
		Scanner scn = new Scanner(System.in);
		this.root = takeInput(null, -1, scn);
	}

	private Node takeInput(Node parent, int children, Scanner scn) {

		if (parent == null) {
			System.out.println("parent node?");
		} else {
			System.out.println("Enter the   " + children + "th child of " + parent.data);
		}

		//

		int cdata = scn.nextInt();
		Node child = new Node();
		size++;
		child.data = cdata;

		System.out.println("Enter the no. of child of " + cdata);
		int alx = scn.nextInt();

		for (int i = 0; i < alx; i++) {
			Node gcgild = takeInput(child, i, scn);
			child.children.add(gcgild);
		}

		return child;

	}

	public void display() {
		display(this.root);
	}

	private void display(Node node) {

		String str = node.data + "=>";

		for (Node child : node.children) {
			str += child.data + ",";

		}
		System.out.println(str);
		System.out.println(".");

		for (Node child : node.children) {
			display(child);
		}

	}

	public boolean isEmpty() {
		return this.size == 0;
	}

	public int size() {
		return this.size;
	}

	public int size2() {
		return size2(this.root);
	}

	private int size2(Node node) {
		int size = 0;
		for (Node child : node.children) {
			int k = size2(child);
			size += k;
		}
		return size + 1;
	}

	public int max() {

		return max(this.root);
	}

	private int max(Node node) {
		int cmax = node.data;
		for (Node child : node.children) {
			

			cmax = Math.max(this.max(child), cmax);
		}
		return cmax;
	}
	
	public int height() {
		return height(this.root);
	}
	private int height(Node node) {
		int c = 0;
		for(Node child : node.children) {
			
			c = Math.max(this.height(child), c);
		}
		return c;
	}
	
}
